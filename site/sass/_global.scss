* {
	box-sizing: border-box;
	margin: 0;
}
body {
	margin: 0;
	padding: 0;
}
.template-container{
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	padding: 1% 10%;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
}
.grid-row {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	margin-right: -15px;
	margin-left: -15px;
}
.column {
	-ms-flex-preferred-size: 0;
	flex-basis: 0;
	-webkit-box-flex: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
	max-width: 100%;
	position: relative;
	width: 100%;
	min-height: 1px;
	padding-right: 15px;
	padding-left: 15px;
}
.grid-100 {
	width: 100%;
}
.full-width{
  width: 100%;
}
.no-mt {
	margin-top: 0;
}
.mt-15 {
	margin-top: 15px;
}
.mt-30 {
	margin-top: 30px;
}
.mb-15 {
	margin-bottom: 15px;
}
.mb-30 {
	margin-bottom: 30px;
}
.p-0 {
	padding: 0 !important;
}
.no-pt {
	padding-top: 0 !important;
}
.pl-0 {
	padding-left: 0 !important;
}
.pb-0 {
	padding-bottom: 0 !important;
}
.pr-0 {
	padding-right: 0 !important;
}
.p-15 {
	padding: 15px;
}
.p-30 {
	padding: 30px;
}
.pt-50 {
	padding-top: 50px;
}
.pb-50 {
	padding-bottom: 50px;
}
a {
	text-decoration: none;
	color: #866D4B;
}
.btn {
	display: inline-block;
	padding: 10px 30px;
	border: 1px solid transparent;
	margin: 0;
	cursor: pointer;
	text-transform: uppercase;
	text-decoration: none;
	font-family: 'Cormorant_Garamond-Regular';
	font-size: 16px;
	line-height: 23px;
	letter-spacing: 0px;
	&:disabled {
		background-color: #DBDBDB;
		color: #5F5F5F;
		border-color: #DBDBDB;
		cursor: not-allowed;
		&:hover {
			background-color: #DBDBDB;
			color: #5F5F5F;
			border-color: #DBDBDB;
			cursor: not-allowed;
		}
	}
}
.btn-gold {
	background-color: #866D4B;
	border-color: #866D4B;
	color: #fff;
	&:hover {
		background-color: white;
		border-color: #866d4b;
		color: #866d4b;
	}
	&:active {
		background-color: transparent;
		border-width: 2px;
		color: #866D4B;
	}
}
input {
  display: block;
	padding: 5px 10px 10px 2px;
	border-width: 0 0 1px 0;
  font-family: 'Roboto-Regular';
  font-size: 16px;
  line-height: 30px;
	letter-spacing: 0px;
  width: 100%;
  color: #866D4B;
  border-bottom-width: 2px;
  border-bottom-color: #866D4B;
	&::placeholder {
		color: #866D4B;
    font-family: 'Roboto-Regular';
	}
  &:focus{
    outline: none;
  }
}
select {
  display: block;
	width: 100%;
	padding: 5px 10px 10px 2px;
	border-width: 0 0 1px 0;
  font-family: 'Roboto-Regular';
  font-size: 16px;
  line-height: 42px;
	letter-spacing: 0px;
}
textarea {
  display: block;
	width: 100%;
	padding: 5px 10px 10px 2px;
	border-width: 0 0 1px 0;
  font-family: 'Roboto-Regular';
  font-size: 16px;
  line-height: 42px;
	letter-spacing: 0px;
  color: #866D4B;
	&::placeholder {
		color: #866D4B;
    font-family: 'Roboto-Regular';
	}
  &:focus{
    outline: none;
  }
}
.btn-optional {
	border-color: #222222;
	color: #222222;
	opacity: 0.8;
	&:hover {
    font-family: 'Cormorant_Garamond-Bold' !important;
	}
	&:active {
		background-color: transparent;
		color: #222222;
	}
}
.btn-inverse {
	color: #FFFFFF;
	border-color: #FFFFFF;
	opacity: 1;
	&:hover {
    font-family: 'Cormorant_Garamond-Bold' !important;
	}
	&:acitve {
		border-width: 2px;
		opacity: 1;
	}
}

// Variables
$checkbox-size: 20px;
$checkbox-border: #cecece;
$checkbox-selected: #02BB72; // Primary colour

.checkbox{
  position: absolute;
  opacity: 0;
  
  // Text
  & + label{
    display: inline-block;
    position: relative;
    cursor: pointer;
    line-height: $checkbox-size;
    padding-left: $checkbox-size + 10;
    font-size: $checkbox-size - 2;
    font-family: sans-serif;
    color: #666; // Label colour
    
    // Checkbox
    &:before{
      position: absolute;
      display: block;
      left: 0;
      top: 0;
      content: "";
      background: transparent;
      width: $checkbox-size;
      height: $checkbox-size;
      
      box-shadow: inset 0 0 0 1px $checkbox-border;
      border-radius: 4px;
      transition: 200ms ease-in-out all;
    }
    
    // Tick
    &:after{
      position: absolute;
      display: block;
      top: 5px;
      left: 8px;
      content: "";
      width: 3px;
      height: 7px;
      border-right: 1px solid transparent;
      border-bottom: 1px solid transparent;
      transform: rotate(45deg);
      
      transition: 200ms ease-in-out all;
    }
  }
  
  // Hover
  & + label:hover{
    color: #333;
  }
  
  // Focus
  & + label:focus{
    outline: none;
  }
  
  // Checked
  &:checked{
    & + label{
      &:before{
        background: $checkbox-selected;
        box-shadow: none;
      }
      &:after{
        border-color: white;
      }
    }
  }
  
  // Disabled
  &:disabled{
    & + label{
      &:before{
        background: #f2f2f2; // Disabled colour
        box-shadow: none;
      }
      &:after{
        border-color: transparent;
      }
    }
  }
  
  // Disabled Checked
  &:checked:disabled{
    & + label{
      &:before{
        background: #f2f2f2;
        box-shadow: none;
      }
      &:after{
        border-color: #cecece;
      }
    }
  }
}

// Additional demo styling
.form-checkbox{
  position: relative;
  display: block;
  margin: 0 0 15px;
}
.demo{
  display: block;
  width: 240px;
  margin: 50px auto;
  padding: 100px;
  border: 1px solid $checkbox-border;
  border-radius: 10px;
}

.bg-grey {
	background-color: #dbdbdb;
}
.color-light-grey {
	color: #b9b9b9;
}

.sebastian-boby1{
  display: inline-block;
  font-size: 90px;
  font-weight: normal;
  font-family: "Sebastian-Boby" !important;
  text-transform: lowercase;
  position: relative;
  top: 18px;
  left: 10px;
  line-height: 33px;
  margin-right: 10px;
}
.sebastian-boby-alt{
  display: inline-block;
  font-size: 100px;
  font-weight: normal;
  font-family: "Sebastian-Boby-Alt" !important;
  text-transform: lowercase;
  position: relative;
  top: 20px;
  left: 10px;
}
.sebastian-boby2{
  font-family: "Sebastian-Boby" !important;
  font-size: 70px;
  font-weight: 500;
  position: relative;
  top: 10px;
}

.fw-500 {
	font-weight: 500;
  }
  
  .fw-600 {
	font-weight: 600;
  }
  
  .p-0 {
	padding: 0 !important;
  }
  
  .p-30{
	padding: 30px !important;
  }

  .p-50{
	padding: 50px !important;
  }

  .pt-0 {
	padding-top: 0 !important;
  }
  
  .pb-0 {
	padding-bottom: 0 !important;
  }
  
  .m-0 {
	margin: 0 !important;
  }
  
  .mt-0 {
	margin-top: 0 !important;
  }
  
  .mt-30 {
	margin-top: 30px !important;
  }
  
  .mb-0 {
	margin-bottom: 0 !important;
  }

  .mt-50 {
	margin-top: 50px !important;
  }

  .mb-50 {
	margin-bottom: 50px !important;
  }

  .list-unstyled {
	padding-left: 0;
	list-style: none;
  }
  
  // Position
  .p-relative {
	position: relative;
  }
  
  .p-absolute {
	  position: absolute;
  }
  
  .p-fixed {
	  position: fixed;
  }
  // Line height
  .lh-1 {
	line-height: 1;
  }
  
  // Block
  .d-block {
	display: block;
  }
  
  .d-none {
	  display: none;
  }
  
  // Flex
  .d-flex {
	  display: flex;
  }
  
  .justify-content-start {
	  justify-content: flex-start;
  }
  
  .justify-content-end {
	  justify-content: flex-end;
  }
  
  .justify-content-center {
	  justify-content: center;
  }
  
  .justify-content-between {
	justify-content: space-between;
  }

  .justify-content-space-around {
	  justify-content: space-around;
  }
  
  .align-items-center {
	  align-items: center;
  }
  
  .flex-110 {
	  flex: 1 1 0;
  }
  
  .flex-auto {
	  flex: 1 1 auto;
  }
  
  .flex-column {
	  flex-direction: column;
  }

// Container and Grid Spacing
$container-width: 1190px;
$grid-space: 15px;
.grid-container {
  max-width: $container-width;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: $grid-space;
  padding-right: $grid-space;
}

$breakpoints: (
	'custom-small-mobile-max': (max-width: 359px),
	'portrait-mobile-max': (max-width: 575px),
	'mobile-min': (min-width: 576px),
	'mobile-max': (max-width: 767px),
	'ipad-min': (min-width: 768px),
	'ipad-max': (max-width: 991px),
	'medium-desktop-min': (min-width: 992px),
	'medium-desktop-max': (max-width: 1199px),
	'large-desktop-min': (min-width: 1200px),
	'medium-large-desktop-min': (min-width: 1366px),
	'medium-large-desktop-max': (max-width: 1400px),
);
  
@mixin breakpoint($name) {
	@if map-has-key($breakpoints, $name) {
	  @media screen and #{inspect(map-get($breakpoints, $name))} {
		@content;
	  }
	}
	@else {
	  @warn "Couldn't find a breakpoint named `#{$name}`.";
	}
}
